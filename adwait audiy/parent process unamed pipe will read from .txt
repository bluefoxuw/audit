#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#define BUFFER_SIZE 25
int main() {
int fd[2];
pid_t pid;
char write_msg[BUFFER_SIZE] = "Hello, child!";
char read_msg[BUFFER_SIZE];
if (pipe(fd) < 0) {
perror("pipe error");
exit(1);
}
pid = fork();
if (pid < 0) {
perror("fork error");
exit(1);
} else if (pid == 0) { // child process
close(fd[1]); // close write end of pipe
if (read(fd[0], read_msg, BUFFER_SIZE) < 0) {
perror("read error");
exit(1);
}
printf("Child read from pipe: %s\n", read_msg);
close(fd[0]); // close read end of pipe
} else { // parent process
close(fd[0]); // close read end of pipe
if (write(fd[1], write_msg, strlen(write_msg) + 1) < 0) {
perror("write error");
exit(1);
}
printf("Parent wrote to pipe: %s\n", write_msg);
close(fd[1]); // close write end of pipe
}
exit(0);
}
