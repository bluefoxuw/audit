activitymain xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="net.simplifiedlearning.sqlitecrudexample.MainActivity">


    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_centerVertical="true"
        android:orientation="vertical"
        android:padding="16dp">

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="12dp"
            android:text="Add a new Employee"
            android:textAlignment="center"
            android:textAppearance="@style/Base.TextAppearance.AppCompat.Large" />

        <EditText
            android:id="@+id/editTextName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Enter Employee Name" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:paddingLeft="6dp"
            android:text="Select Department" />

        <Spinner
            android:id="@+id/spinnerDepartment"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:entries="@array/departments" />

        <EditText
            android:id="@+id/editTextSalary"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:digits="0123456789"
            android:hint="Enter Employee Salary"
            android:inputType="number" />

        <Button
            android:id="@+id/buttonAddEmployee"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Add Employee" />

        <TextView
            android:id="@+id/textViewViewEmployees"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="16dp"
            android:text="View Employees"
            android:textAlignment="center"
            android:textAppearance="@style/Base.TextAppearance.AppCompat.Medium"
            android:textStyle="bold" />

    </LinearLayout>

</RelativeLayout>


strings.xml
<resources>
    <string name="app_name">SQLiteCRUDExample</string>

    <array name="departments">
        <item>Technical</item>
        <item>Support</item>
        <item>Research and Development</item>
        <item>Marketing</item>
        <item>Human Resource</item>
    </array>
</resources><resources>
    <string name="app_name">emp number name address</string>
</resources>


mainactivity.java
package com.example.empnumbernameaddress;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {

    private EditText editTextEmpName, editTextEmpAddress, editTextEmpPhone, editTextEmpSalary, editTextDeptName;
    private Spinner spinnerDept;
    private Button buttonAddEmp, buttonDeleteEmp;
    private DatabaseHelper databaseHelper;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        editTextEmpName = findViewById(R.id.editTextEmpName);
        editTextEmpAddress = findViewById(R.id.editTextEmpAddress);
        editTextEmpPhone = findViewById(R.id.editTextEmpPhone);
        editTextEmpSalary = findViewById(R.id.editTextEmpSalary);
        editTextDeptName = findViewById(R.id.editTextDeptName);
        spinnerDept = findViewById(R.id.spinnerDept);
        buttonAddEmp = findViewById(R.id.buttonAddEmp);
        buttonDeleteEmp = findViewById(R.id.buttonDeleteEmp);

        databaseHelper = new DatabaseHelper(this);

        // Load departments into spinner
        loadDepartments();

        buttonAddEmp.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                addEmployee();
            }
        });

        buttonDeleteEmp.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                deleteEmployee();
            }
        });
    }

    private void loadDepartments() {
        List<String> departments = new ArrayList<String>();
        departments.add("Select Department");

        // Get departments from database
        departments.addAll(databaseHelper.getAllDepartments());

        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, departments);
        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinnerDept.setAdapter(dataAdapter);
        spinnerDept.setOnItemSelectedListener(this);
    }

    private void addEmployee() {
        String name = editTextEmpName.getText().toString().trim();
        String address = editTextEmpAddress.getText().toString().trim();
        String phone = editTextEmpPhone.getText().toString().trim();
        String salary = editTextEmpSalary.getText().toString().trim();
        String deptName = spinnerDept.getSelectedItem().toString();

        if (name.isEmpty() || address.isEmpty() || phone.isEmpty() || salary.isEmpty() || deptName.equals("Select Department")) {
            Toast.makeText(this, "Please fill all fields", Toast.LENGTH_SHORT).show();
            return;
        }

        long result = databaseHelper.addEmployee(name, address, phone, Double.parseDouble(salary), deptName);

        if (result > 0) {
            Toast.makeText(this, "Employee added successfully", Toast.LENGTH_SHORT).show();
            clearFields();
        } else {
            Toast.makeText(this, "Failed to add employee", Toast.LENGTH_SHORT).show();
        }
    }

    private void deleteEmployee() {
        String deptName = editTextDeptName.getText().toString().trim();

        if (deptName.isEmpty()) {
            Toast.makeText(this, "Please enter department name", Toast.LENGTH_SHORT).show();
            return;
        }

        int result = databaseHelper.deleteEmployees(deptName);

        if (result > 0) {
            Toast.makeText(this, "Employee(s) deleted successfully", Toast.LENGTH_SHORT).show();
            clearFields();
        } else {
            Toast.makeText(this, "Failed to delete employee(s)", Toast.LENGTH_SHORT).show();
        }
    }

    private void clearFields() {
        editTextEmpName.setText("");
        editTextEmpAddress.setText("");
        editTextEmp
