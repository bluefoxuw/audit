#include <stdio.h>

#define MAX_SIZE 100

// Function to compute the union of two fuzzy sets
void fuzzyUnion(float setA[], float setB[], int size) {
    float result[MAX_SIZE];
    for (int i = 0; i < size; i++) {
        result[i] = (setA[i] > setB[i]) ? setA[i] : setB[i];
        printf("%.2f ", result[i]);
    }
    printf("\n");
}

// Function to compute the intersection of two fuzzy sets
void fuzzyIntersection(float setA[], float setB[], int size) {
    float result[MAX_SIZE];
    for (int i = 0; i < size; i++) {
        result[i] = (setA[i] < setB[i]) ? setA[i] : setB[i];
        printf("%.2f ", result[i]);
    }
    printf("\n");
}

// Function to compute the complement of a fuzzy set
void fuzzyComplement(float set[], int size) {
    float result[MAX_SIZE];
    for (int i = 0; i < size; i++) {
        result[i] = 1.0 - set[i];
        printf("%.2f ", result[i]);
    }
    printf("\n");
}

// Function to compute the algebraic sum of two fuzzy sets
void fuzzyAlgebraicSum(float setA[], float setB[], int size) {
    float result[MAX_SIZE];
    for (int i = 0; i < size; i++) {
        result[i] = setA[i] + setB[i] - (setA[i] * setB[i]);
        printf("%.2f ", result[i]);
    }
    printf("\n");
}

// Function to compute the algebraic product of two fuzzy sets
void fuzzyAlgebraicProduct(float setA[], float setB[], int size) {
    float result[MAX_SIZE];
    for (int i = 0; i < size; i++) {
        result[i] = setA[i] * setB[i];
        printf("%.2f ", result[i]);
    }
    printf("\n");
}

// Function to compute the cartesian product of two fuzzy sets
void fuzzyCartesianProduct(float setA[], float setB[], int sizeA, int sizeB) {
    printf("Cartesian Product:\n");
    for (int i = 0; i < sizeA; i++) {
        for (int j = 0; j < sizeB; j++) {
            printf("%.2f ", setA[i] * setB[j]);
        }
        printf("\n");
    }
}

int main() {
    int size;
    printf("Enter the size of the fuzzy sets: ");
    scanf("%d", &size);
    float setA[MAX_SIZE], setB[MAX_SIZE];
    
    printf("Enter the elements of set A (separated by spaces): ");
    for (int i = 0; i < size; i++) {
        scanf("%f", &setA[i]);
    }
    
    printf("Enter the elements of set B (separated by spaces): ");
    for (int i = 0; i < size; i++) {
        scanf("%f", &setB[i]);
    }
    
    printf("Union: ");
    fuzzyUnion(setA, setB, size);
    
    printf("Intersection: ");
    fuzzyIntersection(setA, setB, size);
    
    printf("Complement of set A: ");
    fuzzyComplement(setA, size);
    
    printf("Complement of set B: ");
fuzzyComplement(setB, size);

printf("Algebraic Sum: ");
fuzzyAlgebraicSum(setA, setB, size);

printf("Algebraic Product: ");
fuzzyAlgebraicProduct(setA, setB, size);

fuzzyCartesianProduct(setA, setB, size, size);

return 0;
}