Write a JAVA Program to implement built-in support (java.util.Observable) Weather
station with members temperature, humidity, pressure and methods
mesurmentsChanged(), setMesurment(), getTemperature(), getHumidity(),
getPressure() 
import java.util.Observable;
import java.util.Observer;

// WeatherData class (Observable)
class WeatherData extends Observable {
    private float temperature;
    private float humidity;
    private float pressure;

    public void measurementsChanged() {
        setChanged();
        notifyObservers();
    }

    public void setMeasurements(float temperature, float humidity, float pressure) {
        this.temperature = temperature;
        this.humidity = humidity;
        this.pressure = pressure;
        measurementsChanged();
    }

    public float getTemperature() {
        return temperature;
    }

    public float getHumidity() {
        return humidity;
    }

    public float getPressure() {
        return pressure;
    }
}

// WeatherObserver class (Observer)
class WeatherObserver implements Observer {
    private Observable observable;

    public WeatherObserver(Observable observable) {
        this.observable = observable;
        observable.addObserver(this);
    }

    @Override
    public void update(Observable obs, Object arg) {
        if (obs instanceof WeatherData) {
            WeatherData weatherData = (WeatherData) obs;
            display(weatherData);
        }
    }

    private void display(WeatherData weatherData) {
        System.out.println("Temperature: " + weatherData.getTemperature() + " F");
        System.out.println("Humidity: " + weatherData.getHumidity() + "%");
        System.out.println("Pressure: " + weatherData.getPressure() + " hPa");
        System.out.println("---------------------------");
    }
}

// Main class
public class WeatherStationExample {
    public static void main(String[] args) {
        // Create observable (subject)
        WeatherData weatherData = new WeatherData();

        // Create observers
        WeatherObserver observer1 = new WeatherObserver(weatherData);
        WeatherObserver observer2 = new WeatherObserver(weatherData);

        // Simulate weather changes
        weatherData.setMeasurements(80, 65, 30.4f);
        weatherData.setMeasurements(82, 70, 29.2f);
    }
}
